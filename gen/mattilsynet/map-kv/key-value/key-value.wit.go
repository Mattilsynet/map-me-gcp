// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package keyvalue represents the imported interface "mattilsynet:map-kv/key-value@0.1.0".
package keyvalue

import (
	"github.com/Mattilsynet/map-me-gcp/gen/mattilsynet/map-kv/types"
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// KeyValueEntry represents the type alias "mattilsynet:map-kv/key-value@0.1.0#key-value-entry".
//
// See [types.KeyValueEntry] for more information.
type KeyValueEntry = types.KeyValueEntry

// Create represents the imported function "create".
//
//	create: func(key: string, value: list<u8>) -> result<_, string>
//
//go:nosplit
func Create(key string, value cm.List[uint8]) (result cm.Result[string, struct{}, string]) {
	key0, key1 := cm.LowerString(key)
	value0, value1 := cm.LowerList(value)
	wasmimport_Create((*uint8)(key0), (uint32)(key1), (*uint8)(value0), (uint32)(value1), &result)
	return
}

// Get represents the imported function "get".
//
//	get: func(key: string) -> result<key-value-entry, string>
//
//go:nosplit
func Get(key string) (result cm.Result[KeyValueEntryShape, KeyValueEntry, string]) {
	key0, key1 := cm.LowerString(key)
	wasmimport_Get((*uint8)(key0), (uint32)(key1), &result)
	return
}

// Put represents the imported function "put".
//
//	put: func(key: string, value: list<u8>) -> result<_, string>
//
//go:nosplit
func Put(key string, value cm.List[uint8]) (result cm.Result[string, struct{}, string]) {
	key0, key1 := cm.LowerString(key)
	value0, value1 := cm.LowerList(value)
	wasmimport_Put((*uint8)(key0), (uint32)(key1), (*uint8)(value0), (uint32)(value1), &result)
	return
}

// Purge represents the imported function "purge".
//
//	purge: func(key: string) -> result<_, string>
//
//go:nosplit
func Purge(key string) (result cm.Result[string, struct{}, string]) {
	key0, key1 := cm.LowerString(key)
	wasmimport_Purge((*uint8)(key0), (uint32)(key1), &result)
	return
}

// Delete represents the imported function "delete".
//
//	delete: func(key: string) -> result<_, string>
//
//go:nosplit
func Delete(key string) (result cm.Result[string, struct{}, string]) {
	key0, key1 := cm.LowerString(key)
	wasmimport_Delete((*uint8)(key0), (uint32)(key1), &result)
	return
}

// ListKeys represents the imported function "list-keys".
//
//	list-keys: func() -> result<list<string>, string>
//
//go:nosplit
func ListKeys() (result cm.Result[cm.List[string], cm.List[string], string]) {
	wasmimport_ListKeys(&result)
	return
}
